version: '3.9'
services:
  db_postgres:
    image: postgres:13.1
    container_name: db_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./db_data/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    restart: on-failure
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  deal:
    restart: on-failure
    image: lexana/deal:pr-3
    container_name: deal
    ports:
      - '8082:8082'
    env_file:
      - .env.deal
    environment:
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - LIQUIBASE_USERNAME=${LIQUIBASE_USERNAME}
      - LIQUIBASE_PASSWORD=${LIQUIBASE_PASSWORD}
    depends_on:
      - db_postgres
      - kafka

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - type: bind
        source: ./prom_data/prometheus.yml
        target: /etc/prometheus/prometheus.yml
    depends_on:
      - deal

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  conveyor:
    restart: on-failure
    image: lexana/conveyor:pr-8
    container_name: conveyor
    ports:
      - "8081:8081"
    env_file:
      - .env.conveyor

  dossier:
    restart: on-failure
    image: lexana/dossier:pr-2
    container_name: dossier
    env_file:
      - .env.dossier
    environment:
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      - db_postgres
      - kafka

volumes:
  db_data:
  postgresql:
  postgresql_data: